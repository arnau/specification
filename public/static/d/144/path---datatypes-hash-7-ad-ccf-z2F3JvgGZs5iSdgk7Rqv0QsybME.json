{"data":{"markdownRemark":{"html":"<h3 id=\"hash-datatype\"><a href=\"#hash-datatype\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hash datatype</h3>\n<p>A hexadecimal string representing the result of a hashing algorithm such as\nSHA2-256.</p>\n<ul>\n<li>A hash of the itemâ€™s contents may be used to identify the contents of an item, irrespective of where it is stored or presented.</li>\n<li>An item-hash is a hashing algorithm and a hash value, separated by a colon (:) character.  Currently there is only one valid hashing algorithm, <code class=\"language-text\">sha-256</code>. In future, other alternative hashing algorithms may be added to this specification.  They will be distinguished by having a different string prefix.</li>\n</ul>\n<h4 id=\"sha-256-item-hash\"><a href=\"#sha-256-item-hash\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SHA-256 item hash</h4>\n<hr>\n<p><strong>Example</strong></p>\n<p>The SHA-256 item hash of the item with a field <code class=\"language-text\">field1</code> with a value of <code class=\"language-text\">&quot;a&quot;</code> and a field <code>field2</code> with a value of <code>\"b\"</code> is:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">sha-256:129332749e67eb9ab7390d7da2e88173367d001ac3e9e39f06e41690cd05e3ae</code></pre>\n      </div>\n<p>The <code>sha-256</code> item hash is computed by serialising the item to a canonical form of JSON, and computing the SHA-256 hash, defined in <a data-link-type=\"biblio\" href=\"#biblio-fips-180-4\">[FIPS-180-4]</a>, of the resulting serial form.</p>\n<p>The canonicalisation algorithm is as follows:</p>\n<ul>\n<li>JSON object values MUST be sorted into lexicographical order. The\nkeys of a JSON object must be a valid field name, which is\nrestricted to the alphabet of lower case letters and hyphens, which\nmakes this ordering relatively simple to implement.</li>\n<li>All whitespace MUST be removed.</li>\n<li>\n<p>Characters in strings must be represented as follows:</p>\n<ul>\n<li>For ASCII control characters (codepoints 0x00 - 0x1f):</li>\n<li>If it has a short representation (<code>\\b</code>, <code>\\f</code>, <code>\\n</code>, <code>\\r</code>, or <code>\\t</code>), that short representation MUST be used.</li>\n<li>Other control characters (such as NULL) MUST be represented as a <code>\\u00XX</code> escape sequence.  Hexadecimal digits MUST be upper-case.</li>\n<li>Backslash (<code>&#x3C;/code>) and double quote (<code>\"</code>) MUST be escaped as <code>\\</code> and <code>\"</code> respectively.</li>\n<li>All other characters MUST be included literally (ie unescaped).  This includes forward-slash (<code>/</code>).</li>\n</ul>\n</li>\n</ul>","frontmatter":{"id":"hash-datatype","title":"Hash datatype","url":"/datatypes/hash/"}}},"pageContext":{"id":"hash-datatype"}}
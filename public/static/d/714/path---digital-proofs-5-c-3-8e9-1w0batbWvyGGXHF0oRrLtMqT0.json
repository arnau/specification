{"data":{"markdownRemark":{"html":"<h2 id=\"digital-proofs\"><a href=\"#digital-proofs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Digital Proofs</h2>\n<h3 id=\"certificate-transparency\"><a href=\"#certificate-transparency\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Certificate transparency</h3>\n<p>Certificate Transparency <a data-link-type=\"biblio\"\nhref=\"#biblio-rfc6962\">[RFC6962]</a> is one of a number of possible methods of\nproving the integrity of a register.</p>\n<h4 id=\"entry-hash\"><a href=\"#entry-hash\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entry hash</h4>\n<p>The entry hash is the application of a supported hashing algorithm on the data\ncontained in the <a href=\"#entry-resource\">§3.2 Entry resource</a>. The <a\nhref=\"#item-hash-datatype\">§8.11 Item-hash datatype</a> of the entry, rather\nthan the item itself (<a href=\"#item-resource\">§3.1 Item resource</a>), is\npart of the raw data hashed to create the entry hash.</p>\n<p>The entry hash is required for many operations in Certificate Transparency.</p>\n<h4 id=\"signed-tree-head\"><a href=\"#signed-tree-head\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Signed tree head</h4>\n<p>The signed tree head for a register is the tree-head-signature property of the\n<a href=\"#register-proof-resource\">§3.5 Register proof resource</a>, where the\nproof-identifier is specified as merkle:sha-256.</p>\n<p>The signed tree head for a register is the signed Merkle tree root hash (<a\ndata-link-type=\"biblio\" href=\"#biblio-rfc6962\">[RFC6962]</a> section 2.1) of a\nMerkle tree containing all entries in the register. The corresponding\nroot-hash is also a property of the <a href=\"#register-proof-resource\">§3.5\nRegister proof resource</a>.</p>\n<h4 id=\"verifying-the-register\"><a href=\"#verifying-the-register\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying the register</h4>\n<p>To verify a register obtained from the <a href=\"#download\">§6.1 Download\nresource</a>, a client must compute the Merkle tree root hash from the\ncomplete list of raw <a href=\"#entry-resource\">§3.2 Entry resource</a>, as per\n<a data-link-type=\"biblio\" href=\"#biblio-rfc6962\">[RFC6962]</a> section 2.1,\nensuring that it equals the root-hash of the <a\nhref=\"#register-proof-resource\">§3.5 Register proof resource</a> and that the\nsame <a href=\"#signed-tree-head\">§12.1.2 Signed tree head</a> can be generated\nby signing the root-hash against a public key.</p>\n<p>The client must also verify that for each <a href=\"#entry-resource\">§3.2 Entry\nresource</a> in the register there exists an item with the corresponding <a\nhref=\"#item-hash-datatype\">§8.11 Item-hash datatype</a> and that the contents\nof the item generate the correct <a href=\"#item-hash-datatype\">§8.11 Item-hash\ndatatype</a>.</p>\n<h4 id=\"verifying-an-entry\"><a href=\"#verifying-an-entry\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying an entry</h4>\n<p>The merkle-audit-path for the entry from the <a\nhref=\"#entry-proof-resource\">§3.6 Entry proof resource</a> provides the\nshortest list of additional nodes in the Merkle tree required to compute the\nMerkle tree root hash.</p>\n<p>To verify an entry exists in a register, given that total-entries of the <a\nhref=\"#entry-proof-resource\">§3.6 Entry proof resource</a> equals the\ntotal-entries of the <a href=\"#register-proof-resource\">§3.5 Register proof\nresource</a>, a client must combine the hash of the entry with each Merkle\ntree node in the merkle-audit-path consecutively, as per <a\ndata-link-type=\"biblio\" href=\"#biblio-rfc6962\">[RFC6962]</a> section 2.1.1,\nand verify that the resulting Merkle tree root hash is equal to the root-hash\nof the <a href=\"#register-proof-resource\">§3.5 Register proof resource</a>.\nThe client should also verify the <a href=\"#signed-tree-head\">§12.1.2 Signed\ntree head</a> against the computed root-hash using a public key.</p>\n<h4 id=\"verifying-consistency\"><a href=\"#verifying-consistency\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying consistency</h4>\n<p>The merkle-consistency-nodes from the <a\nhref=\"#consistency-proof-resource\">§3.7 Consistency proof resource</a> for two\nversions of a register provides the list of nodes in the Merkle tree required\nto verify that the first n entries (where n is the number of entries in the\nsmaller register) are equal in both registers.</p>\n<p>To verify the consistency of two versions of a register, given that\ntotal-entries-1 and total-entries-2 of the <a\nhref=\"#consistency-proof-resource\">§3.7 Consistency proof resource</a> equal\nthe total-entries of each <a href=\"#register-proof-resource\">§3.5 Register\nproof resource</a>, the client must prove that the root-hash of the <a\nhref=\"#register-proof-resource\">§3.5 Register proof resource</a> for the\nlarger register can be computed using the set of consistency-proof-nodes and\nthat the root-hash of the <a href=\"#register-proof-resource\">§3.5 Register\nproof resource</a> for the smaller register can be computed using a subset of\nthe same consistency-proof-nodes, as per <a data-link-type=\"biblio\"\nhref=\"#biblio-rfc6962\">[RFC6962]</a> section 2.1.2. The client must also\nverify the corresponding <a href=\"#signed-tree-head\">§12.1.2 Signed tree\nhead</a> against each root-hash using a public key.</p>\n<h4 id=\"verifying-the-records\"><a href=\"#verifying-the-records\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying the records</h4>\n<h4 id=\"verifying-a-record\"><a href=\"#verifying-a-record\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying a record</h4>","frontmatter":{"id":"digital-proofs","title":"Digital proofs","url":"/digital-proofs/"}}},"pageContext":{"id":"digital-proofs"}}